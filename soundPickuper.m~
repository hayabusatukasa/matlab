clear all;
%% 前処理
fname_withoutWAV = '141121_001';
filename = [fname_withoutWAV,'.wav'];
pass = ['\Users\Shunji\Music\RandomPickup\'];
a_info = audioinfo(filename);
fs = a_info.SampleRate;
dur = a_info.Duration;
i_stop = floor(dur/60);

is_getaudio = 1;

%% フレームごとのパラメータ取得
time = [];      % 時間
db = [];        % dB (P0=20*10^-6)
cent = [];      % スペクトル重心
deltaT = 1.0;   % フレーム分解能
shiftT = 0.5;   % フレームシフト長
fft_size = 2^15;% FFTサイズ
P0 = 2e-5;      % dB計算におけるP0

% パラメータ取得全体での計算時間の計測開始
t_total = cputime;
for i=0:i_stop
    % 1分ごとのパラメータ取得の計算時間の計測開始
    t_part = cputime;
    display(['calculating ',num2str(i),' to ',num2str(i+1)]);

    % 60秒ごとにパラメータ取得関数に入るが，末尾でオーバーしないようにする
    if floor(dur-i*60)<=60
        interval = floor(dur)-i*60;
        s_start = i*60;
        s_end = s_start+interval;
    else
        s_start = i*60;
        s_end = (i+1)*60+shiftT;
    end
    
    % パラメータ取得し，一時変数に格納
    [t_time,t_db,t_cent] = getParameter...
        (fname_withoutWAV,s_start,s_end,deltaT,shiftT,fft_size);
    
    % 一時変数を結合
    time = cat(1,time,t_time);
    db = cat(1,db,t_db);
    cent = cat(1,cent,t_cent);
    
    % 1分ごとのパラメータ取得の計算時間の計測終了
    t_part = cputime - t_part;
    display(['計算時間は ',num2str(t_part),' 秒です']);
end
% パラメータ取得全体での計算時間の計測終了
t_total = cputime - t_total;
display(['トータルの計算時間は ',num2str(t_total),' 秒です']);

clear t_time t_db t_cent t_part t_total s_start s_end;

%% 点数計算
deltaT_calcScore = 10;
type_getscore = 1;
[~,score] = calcScore4(time,db,cent,deltaT_calcScore,shiftT,type_getscore);

%%  テーブル作成
T_param = table(time,db,cent,score','VariableNames',...
    {'time','dB','cent','score'});

% clear time db cent score;

%% 場面の分岐点検出
windowSize = 30;
dsrate = 10;
coeff_medfilt = 10;
filtertype = 1;
is_plot = 0;
[T_scene,sf] = cutScene3...
    (T_param,windowSize,coeff_medfilt,filtertype,dsrate,is_plot);

display([num2str(height(T_scene)),' scenes returned cutScene']);

scd = getSceneDist(T_param,T_scene);

%% 場面の結合
wg_length = 100;
thr_dist = 1.0;
% T_scene1 = sceneBind4(T_param,T_scene,thr_dist);
T_scene1 = sceneBind6_refactored(T_param,T_scene,thr_dist,wg_length);
display([num2str(height(T_scene1)),' scenes returned sceneBind']);

thr_dist = 1.5;
% T_scene2 = sceneBind4(T_param,T_scene,thr_dist);
T_scene2 = sceneBind6_refactored(T_param,T_scene,thr_dist,wg_length);
display([num2str(height(T_scene2)),' scenes returned sceneBind']);

thr_dist = 2.0;
% T_scene3 = sceneBind4(T_param,T_scene,thr_dist);
T_scene3 = sceneBind6_refactored(T_param,T_scene,thr_dist,wg_length);
display([num2str(height(T_scene3)),' scenes returned sceneBind']);

% plot
plotScene(T_param,T_scene1);
plotScene(T_param,T_scene2);
plotScene(T_param,T_scene3);



%% 切り出した場面ごとの点数計算
T_scene = T_scene1;
bpm = 120;
bars = 4;
beatperbar = 8;
noteunit = 4;
beat_interval = 60/bpm*(noteunit/beatperbar); % [sec]
aoBeats = bars*beatperbar;
bisample = round(beat_interval*fs); % [sample]
aoSampleLength = bisample*aoBeats; % [sample]
deltaT_calcScore = ceil(beat_interval*aoBeats);

clear str_scene str_tmp

for i=1:height(T_scene)
    s_start = T_scene.scene_start(i);
    s_end   = T_scene.scene_end(i);
    T_tmp = T_param((T_param.time>=s_start)&(T_param.time<=s_end),:);
    [str_scene(i).score,~] = ...
        calcScore4(T_tmp.time,T_tmp.dB,T_tmp.cent,deltaT_calcScore,shiftT,1);
    str_scene(i).time  = T_tmp.time';
end

af = arrayfun(@(x) isempty(x.score), str_scene);

n = 1;
for i=1:length(af)
    if af(i)==0
        str_tmp(n) = str_scene(i);
        n=n+1;
    end
end
str_scene = str_tmp;

%% 切り出した場面ごとの素材部分をランダムに取り出す
num_pickup = 100;
sec_pickup = 60;    % in sec
sample_pickup = sec_pickup/shiftT;    % in sample

clear str_random str_tmp
str_random = randomPickup2(str_scene,num_pickup,sample_pickup);

af = arrayfun(@(x) height(x.table)==1, str_random);

n = 1;
for i=1:length(af)
    if af(i)==0
        str_tmp(n) = str_random(i);
        n=n+1;
    end
end
str_random = str_tmp;

%% オーディオ素材を音楽用サンプルに仕上げる
tau = 0.05;
% bpm = 85;
% bars = 4;
% beatperbar = 8;
% noteunit = 4;
audio_sample = [];
audio_random = [];
is_plot = 0;

for i=1:length(str_random)
    if isempty(str_random(i).table) == 0
        display(['Scene ',num2str(i),' audio sample generating...']);
        a_tmp = audioread([fname_withoutWAV,'.wav'],...
            [fs*str_random(i).table.s_start(1)+1,...
            fs*str_random(i).table.s_end(1)]);
        a_tmp = (a_tmp(:,1)+a_tmp(:,2))/2;
        audio_sample(i,:) = audioSampleGenerator_refactored...
            (a_tmp,fs,tau,bpm,bars,beatperbar,noteunit,is_plot);
        audio_random(i,:) = a_tmp(1:aoSampleLength,1);
    else
        display(['Scene ',num2str(i),' audio sample generate skipped']);
    end
end

%% オーディオのノーマライズ
norm_power = 0.5;
audio_sample_norm = [];
audio_random_norm = [];
SNratio = [];
for i=1:length(audio_sample(:,1))
    audio_sample_norm(i,:) = ...
        norm_power.*audio_sample(i,:)./max(abs(audio_sample(i,:)));
    audio_random_norm(i,:) = ...
        norm_power.*audio_random(i,:)./max(abs(audio_random(i,:)));
    SNratio(i) = max(abs(audio_random(i,:)))/norm_power;
end

audio_sample = audio_sample_norm;
audio_random = audio_random_norm;

%% サンプルのフェードイン・フェードアウト処理
attack  = round(0.001*fs);
release = round(0.001*fs);
decay   = floor(bisample/2)-attack;
sustain = ceil(bisample/2)-release;

% ビート強調（強）
avalue  = 0.0;
dvalue  = 1.0;
svalue  = 0.5;
rvalue  = 0.0;
adsr = getADSR(attack,decay,sustain,release,avalue,dvalue,svalue,rvalue);
fade05 = [];
for i=1:aoBeats
    fade05 = [fade05,adsr];
end

% ビート強調（弱）
avalue  = 0.0;
dvalue  = 1.0;
svalue  = 0.8;
rvalue  = 0.0;
adsr = getADSR(attack,decay,sustain,release,avalue,dvalue,svalue,rvalue);
fade08 = [];
for i=1:aoBeats
    fade08 = [fade08,adsr];
end

% ビート強調なし
avalue  = 0.0;
dvalue  = 1.0;
svalue  = 1.0;
rvalue  = 0.0;
adsr = getADSR(attack,decay,sustain,release,avalue,dvalue,svalue,rvalue);
fade10 = [];
for i=1:aoBeats
    fade10 = [fade10,adsr];
end

audio_fade05 = [];
audio_fade08 = [];
audio_fade10 = [];
for i=1:length(audio_sample(:,1))
    audio_fade05(i,:) = audio_sample(i,:).*fade05;
    audio_fade08(i,:) = audio_sample(i,:).*fade08;
    audio_fade10(i,:) = audio_sample(i,:).*fade10;
end

audio_random_fade05 = [];
audio_random_fade08 = [];
audio_random_fade10 = [];
for i=1:length(audio_sample(:,1))
    audio_random_fade05(i,:) = audio_random(i,:).*fade05;
    audio_random_fade08(i,:) = audio_random(i,:).*fade08;
    audio_random_fade10(i,:) = audio_random(i,:).*fade10;
end

%% 猫と戯れる
if fs==44100
    if bpm==100
        neko1 = audioread('neko1_bpm100.wav');
        neko2 = audioread('neko2_bpm100.wav');
        neko3 = audioread('neko3_bpm100.wav');
    elseif bpm==120
        neko1 = audioread('neko1_bpm120.wav');
        neko2 = audioread('neko2_bpm120.wav');
        neko3 = audioread('neko3_bpm120.wav');
    end
end

neko_4bar = length(neko)-aoSampleLength;
neko_2bar = length(neko)-neko_2bar;
for i=1:length(audio_sample(:,1))
    audio_random_fade05_neko(i,:) = [neko(1:neko_2bar)',...
        audio_random_fade05(i,:) + neko((neko_4bar+1):end)'];
    audio_random_fade08_neko(i,:) = [neko(1:neko_2bar)'...
        audio_random_fade05(i,:) + neko((neko_4bar+1):end)';
    audio_random_fade10_neko(i,:) = [neko(1:neko_2bar)'...
        audio_random_fade05(i,:) + neko((neko_4bar+1):end)';
end

%% 音楽用サンプルを書き出す
if is_getaudio == 1
    s = size(audio_sample);
    for i=1:length(str_random)
        if SNratio(i) >=0.2
            wfname1 = [pass,'sample_scene',num2str(i),'_bpm',num2str(bpm),...
                '_bars',num2str(bars),'_bpb',num2str(beatperbar),'.wav'];
            wfname2 = [pass,'sample_fade05_scene',num2str(i),'_bpm',num2str(bpm),...
                '_bars',num2str(bars),'_bpb',num2str(beatperbar),'.wav'];
            wfname3 = [pass,'random_scene',num2str(i),'_',...
                num2str(str_scene(i).time(1)),'to',num2str(str_scene(i).time(end)),...
                '_section',num2str(str_random(i).table.s_start(1)),...
                'to',num2str(str_random(i).table.s_end(1)),'.wav'];
            wfname4 = [pass,'random_fade05_scene',num2str(i),'_',...
                num2str(str_scene(i).time(1)),'to',num2str(str_scene(i).time(end)),...
                '_section',num2str(str_random(i).table.s_start(1)),...
                'to',num2str(str_random(i).table.s_end(1)),'.wav'];
            wfname5 = [pass,'sample_fade08_scene',num2str(i),'_bpm',num2str(bpm),...
                '_bars',num2str(bars),'_bpb',num2str(beatperbar),'.wav'];
            wfname6 = [pass,'random_fade08_scene',num2str(i),'_',...
                num2str(str_scene(i).time(1)),'to',num2str(str_scene(i).time(end)),...
                '_section',num2str(str_random(i).table.s_start(1)),...
                'to',num2str(str_random(i).table.s_end(1)),'.wav'];
            audiowrite(wfname1,audio_fade10(i,:),fs);
            audiowrite(wfname2,audio_fade05(i,:),fs);
            audiowrite(wfname3,audio_random_fade10(i,:),fs);
            audiowrite(wfname4,audio_random_fade05(i,:),fs);
            audiowrite(wfname5,audio_fade08(i,:),fs);
            audiowrite(wfname6,audio_random_fade08(i,:),fs);
        end
    end
%     wfname3 = [pass,'scene_all','.wav'];
%     audiowrite(wfname3,audio_all,fs);
end

